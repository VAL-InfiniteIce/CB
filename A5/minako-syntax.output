Grammar

    0 $accept: start $end

    1 start: program

    2 program: %empty
    3        | program declassignment ';'
    4        | program functiondefinition

    5 $@1: %empty

    6 $@2: %empty

    7 functiondefinition: type ID $@1 '(' opt_parameterlist ')' $@2 '{' statementlist '}'

    8 opt_parameterlist: %empty
    9                  | parameterlist

   10 parameterlist: parameter
   11              | parameter ',' parameterlist

   12 parameter: type ID

   13 $@3: %empty

   14 functioncall: ID '(' $@3 opt_argumentlist ')'

   15 opt_argumentlist: %empty
   16                 | argumentlist

   17 argumentlist: assignment
   18             | argumentlist ',' assignment

   19 statementlist: %empty
   20              | statementlist statement

   21 $@4: %empty

   22 $@5: %empty

   23 block: '{' $@4 statementlist $@5 '}'

   24 statement: ifstatement
   25          | forstatement
   26          | whilestatement
   27          | returnstatement ';'
   28          | dowhilestatement ';'
   29          | printf ';'
   30          | declassignment ';'
   31          | statassignment ';'
   32          | functioncall ';'
   33          | block

   34 $@6: %empty

   35 ifstatement: KW_IF '(' assignment $@6 ')' statement opt_else

   36 opt_else: %empty
   37         | KW_ELSE statement

   38 $@7: %empty

   39 forstatement: KW_FOR '(' $@7 declassignment ';' expr ';' statassignment ')' statement

   40 $@8: %empty

   41 forstatement: KW_FOR '(' $@8 statassignment ';' expr ';' statassignment ')' statement

   42 $@9: %empty

   43 dowhilestatement: KW_DO $@9 statement KW_WHILE '(' assignment ')'

   44 $@10: %empty

   45 whilestatement: KW_WHILE $@10 '(' assignment ')' statement

   46 returnstatement: KW_RETURN
   47                | KW_RETURN assignment

   48 printf: KW_PRINTF '(' assignment ')'
   49       | KW_PRINTF '(' CONST_STRING ')'

   50 declassignment: type ID
   51               | type ID '=' assignment

   52 type: KW_BOOLEAN
   53     | KW_FLOAT
   54     | KW_INT
   55     | KW_VOID

   56 statassignment: ID '=' assignment

   57 assignment: ID '=' assignment
   58           | expr

   59 expr: simpexpr
   60     | simpexpr EQ simpexpr
   61     | simpexpr NEQ simpexpr
   62     | simpexpr LEQ simpexpr
   63     | simpexpr GEQ simpexpr
   64     | simpexpr LSS simpexpr
   65     | simpexpr GRT simpexpr

   66 simpexpr: simpexpr '+' simpexpr
   67         | simpexpr '-' simpexpr
   68         | simpexpr OR simpexpr
   69         | simpexpr '*' simpexpr
   70         | simpexpr '/' simpexpr
   71         | simpexpr AND simpexpr
   72         | '-' simpexpr
   73         | CONST_INT
   74         | CONST_FLOAT
   75         | CONST_BOOLEAN
   76         | functioncall
   77         | ID
   78         | '(' assignment ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 7 14 35 39 41 43 45 48 49 78
')' (41) 7 14 35 39 41 43 45 48 49 78
'*' (42) 69
'+' (43) 66
',' (44) 11 18
'-' (45) 67 72
'/' (47) 70
';' (59) 3 27 28 29 30 31 32 39 41
'=' (61) 51 56 57
'{' (123) 7 23
'}' (125) 7 23
error (256)
AND (258) 71
OR (259) 68
EQ (260) 60
NEQ (261) 61
LEQ (262) 62
GEQ (263) 63
LSS (264) 64
GRT (265) 65
KW_BOOLEAN (266) 52
KW_DO (267) 43
KW_ELSE (268) 37
KW_FLOAT (269) 53
KW_FOR (270) 39 41
KW_IF (271) 35
KW_INT (272) 54
KW_PRINTF (273) 48 49
KW_RETURN (274) 46 47
KW_VOID (275) 55
KW_WHILE (276) 43 45
CONST_INT (277) 73
CONST_FLOAT (278) 74
CONST_BOOLEAN (279) 75
CONST_STRING (280) 49
ID (281) 7 12 14 50 51 56 57 77
UMINUS (282)
LOWER_THAN_ELSE (283)


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
start (41)
    on left: 1, on right: 0
program (42)
    on left: 2 3 4, on right: 1 3 4
functiondefinition (43)
    on left: 7, on right: 4
$@1 (44)
    on left: 5, on right: 7
$@2 (45)
    on left: 6, on right: 7
opt_parameterlist (46)
    on left: 8 9, on right: 7
parameterlist (47)
    on left: 10 11, on right: 9 11
parameter (48)
    on left: 12, on right: 10 11
functioncall (49)
    on left: 14, on right: 32 76
$@3 (50)
    on left: 13, on right: 14
opt_argumentlist (51)
    on left: 15 16, on right: 14
argumentlist (52)
    on left: 17 18, on right: 16 18
statementlist (53)
    on left: 19 20, on right: 7 20 23
block (54)
    on left: 23, on right: 33
$@4 (55)
    on left: 21, on right: 23
$@5 (56)
    on left: 22, on right: 23
statement (57)
    on left: 24 25 26 27 28 29 30 31 32 33, on right: 20 35 37 39 41
    43 45
ifstatement (58)
    on left: 35, on right: 24
$@6 (59)
    on left: 34, on right: 35
opt_else (60)
    on left: 36 37, on right: 35
forstatement (61)
    on left: 39 41, on right: 25
$@7 (62)
    on left: 38, on right: 39
$@8 (63)
    on left: 40, on right: 41
dowhilestatement (64)
    on left: 43, on right: 28
$@9 (65)
    on left: 42, on right: 43
whilestatement (66)
    on left: 45, on right: 26
$@10 (67)
    on left: 44, on right: 45
returnstatement (68)
    on left: 46 47, on right: 27
printf (69)
    on left: 48 49, on right: 29
declassignment (70)
    on left: 50 51, on right: 3 30 39
type (71)
    on left: 52 53 54 55, on right: 7 12 50 51
statassignment (72)
    on left: 56, on right: 31 39 41
assignment (73)
    on left: 57 58, on right: 17 18 35 43 45 47 48 51 56 57 78
expr (74)
    on left: 59 60 61 62 63 64 65, on right: 39 41 58
simpexpr (75)
    on left: 66 67 68 69 70 71 72 73 74 75 76 77 78, on right: 59 60
    61 62 63 64 65 66 67 68 69 70 71 72


State 0

    0 $accept: . start $end

    $default  reduce using rule 2 (program)

    start    go to state 1
    program  go to state 2


State 1

    0 $accept: start . $end

    $end  shift, and go to state 3


State 2

    1 start: program .
    3 program: program . declassignment ';'
    4        | program . functiondefinition

    KW_BOOLEAN  shift, and go to state 4
    KW_FLOAT    shift, and go to state 5
    KW_INT      shift, and go to state 6
    KW_VOID     shift, and go to state 7

    $default  reduce using rule 1 (start)

    functiondefinition  go to state 8
    declassignment      go to state 9
    type                go to state 10


State 3

    0 $accept: start $end .

    $default  accept


State 4

   52 type: KW_BOOLEAN .

    $default  reduce using rule 52 (type)


State 5

   53 type: KW_FLOAT .

    $default  reduce using rule 53 (type)


State 6

   54 type: KW_INT .

    $default  reduce using rule 54 (type)


State 7

   55 type: KW_VOID .

    $default  reduce using rule 55 (type)


State 8

    4 program: program functiondefinition .

    $default  reduce using rule 4 (program)


State 9

    3 program: program declassignment . ';'

    ';'  shift, and go to state 11


State 10

    7 functiondefinition: type . ID $@1 '(' opt_parameterlist ')' $@2 '{' statementlist '}'
   50 declassignment: type . ID
   51               | type . ID '=' assignment

    ID  shift, and go to state 12


State 11

    3 program: program declassignment ';' .

    $default  reduce using rule 3 (program)


State 12

    7 functiondefinition: type ID . $@1 '(' opt_parameterlist ')' $@2 '{' statementlist '}'
   50 declassignment: type ID .
   51               | type ID . '=' assignment

    '='  shift, and go to state 13

    ';'       reduce using rule 50 (declassignment)
    $default  reduce using rule 5 ($@1)

    $@1  go to state 14


State 13

   51 declassignment: type ID '=' . assignment

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 18
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    assignment    go to state 22
    expr          go to state 23
    simpexpr      go to state 24


State 14

    7 functiondefinition: type ID $@1 . '(' opt_parameterlist ')' $@2 '{' statementlist '}'

    '('  shift, and go to state 25


State 15

   73 simpexpr: CONST_INT .

    $default  reduce using rule 73 (simpexpr)


State 16

   74 simpexpr: CONST_FLOAT .

    $default  reduce using rule 74 (simpexpr)


State 17

   75 simpexpr: CONST_BOOLEAN .

    $default  reduce using rule 75 (simpexpr)


State 18

   14 functioncall: ID . '(' $@3 opt_argumentlist ')'
   57 assignment: ID . '=' assignment
   77 simpexpr: ID .

    '('  shift, and go to state 26
    '='  shift, and go to state 27

    $default  reduce using rule 77 (simpexpr)


State 19

   72 simpexpr: '-' . simpexpr

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 28
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    simpexpr      go to state 29


State 20

   78 simpexpr: '(' . assignment ')'

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 18
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    assignment    go to state 30
    expr          go to state 23
    simpexpr      go to state 24


State 21

   76 simpexpr: functioncall .

    $default  reduce using rule 76 (simpexpr)


State 22

   51 declassignment: type ID '=' assignment .

    $default  reduce using rule 51 (declassignment)


State 23

   58 assignment: expr .

    $default  reduce using rule 58 (assignment)


State 24

   59 expr: simpexpr .
   60     | simpexpr . EQ simpexpr
   61     | simpexpr . NEQ simpexpr
   62     | simpexpr . LEQ simpexpr
   63     | simpexpr . GEQ simpexpr
   64     | simpexpr . LSS simpexpr
   65     | simpexpr . GRT simpexpr
   66 simpexpr: simpexpr . '+' simpexpr
   67         | simpexpr . '-' simpexpr
   68         | simpexpr . OR simpexpr
   69         | simpexpr . '*' simpexpr
   70         | simpexpr . '/' simpexpr
   71         | simpexpr . AND simpexpr

    AND  shift, and go to state 31
    OR   shift, and go to state 32
    EQ   shift, and go to state 33
    NEQ  shift, and go to state 34
    LEQ  shift, and go to state 35
    GEQ  shift, and go to state 36
    LSS  shift, and go to state 37
    GRT  shift, and go to state 38
    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 59 (expr)


State 25

    7 functiondefinition: type ID $@1 '(' . opt_parameterlist ')' $@2 '{' statementlist '}'

    KW_BOOLEAN  shift, and go to state 4
    KW_FLOAT    shift, and go to state 5
    KW_INT      shift, and go to state 6
    KW_VOID     shift, and go to state 7

    $default  reduce using rule 8 (opt_parameterlist)

    opt_parameterlist  go to state 43
    parameterlist      go to state 44
    parameter          go to state 45
    type               go to state 46


State 26

   14 functioncall: ID '(' . $@3 opt_argumentlist ')'

    $default  reduce using rule 13 ($@3)

    $@3  go to state 47


State 27

   57 assignment: ID '=' . assignment

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 18
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    assignment    go to state 48
    expr          go to state 23
    simpexpr      go to state 24


State 28

   14 functioncall: ID . '(' $@3 opt_argumentlist ')'
   77 simpexpr: ID .

    '('  shift, and go to state 26

    $default  reduce using rule 77 (simpexpr)


State 29

   66 simpexpr: simpexpr . '+' simpexpr
   67         | simpexpr . '-' simpexpr
   68         | simpexpr . OR simpexpr
   69         | simpexpr . '*' simpexpr
   70         | simpexpr . '/' simpexpr
   71         | simpexpr . AND simpexpr
   72         | '-' simpexpr .

    $default  reduce using rule 72 (simpexpr)


State 30

   78 simpexpr: '(' assignment . ')'

    ')'  shift, and go to state 49


State 31

   71 simpexpr: simpexpr AND . simpexpr

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 28
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    simpexpr      go to state 50


State 32

   68 simpexpr: simpexpr OR . simpexpr

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 28
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    simpexpr      go to state 51


State 33

   60 expr: simpexpr EQ . simpexpr

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 28
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    simpexpr      go to state 52


State 34

   61 expr: simpexpr NEQ . simpexpr

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 28
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    simpexpr      go to state 53


State 35

   62 expr: simpexpr LEQ . simpexpr

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 28
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    simpexpr      go to state 54


State 36

   63 expr: simpexpr GEQ . simpexpr

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 28
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    simpexpr      go to state 55


State 37

   64 expr: simpexpr LSS . simpexpr

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 28
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    simpexpr      go to state 56


State 38

   65 expr: simpexpr GRT . simpexpr

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 28
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    simpexpr      go to state 57


State 39

   66 simpexpr: simpexpr '+' . simpexpr

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 28
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    simpexpr      go to state 58


State 40

   67 simpexpr: simpexpr '-' . simpexpr

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 28
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    simpexpr      go to state 59


State 41

   69 simpexpr: simpexpr '*' . simpexpr

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 28
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    simpexpr      go to state 60


State 42

   70 simpexpr: simpexpr '/' . simpexpr

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 28
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    simpexpr      go to state 61


State 43

    7 functiondefinition: type ID $@1 '(' opt_parameterlist . ')' $@2 '{' statementlist '}'

    ')'  shift, and go to state 62


State 44

    9 opt_parameterlist: parameterlist .

    $default  reduce using rule 9 (opt_parameterlist)


State 45

   10 parameterlist: parameter .
   11              | parameter . ',' parameterlist

    ','  shift, and go to state 63

    $default  reduce using rule 10 (parameterlist)


State 46

   12 parameter: type . ID

    ID  shift, and go to state 64


State 47

   14 functioncall: ID '(' $@3 . opt_argumentlist ')'

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 18
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    $default  reduce using rule 15 (opt_argumentlist)

    functioncall      go to state 21
    opt_argumentlist  go to state 65
    argumentlist      go to state 66
    assignment        go to state 67
    expr              go to state 23
    simpexpr          go to state 24


State 48

   57 assignment: ID '=' assignment .

    $default  reduce using rule 57 (assignment)


State 49

   78 simpexpr: '(' assignment ')' .

    $default  reduce using rule 78 (simpexpr)


State 50

   66 simpexpr: simpexpr . '+' simpexpr
   67         | simpexpr . '-' simpexpr
   68         | simpexpr . OR simpexpr
   69         | simpexpr . '*' simpexpr
   70         | simpexpr . '/' simpexpr
   71         | simpexpr . AND simpexpr
   71         | simpexpr AND simpexpr .

    $default  reduce using rule 71 (simpexpr)


State 51

   66 simpexpr: simpexpr . '+' simpexpr
   67         | simpexpr . '-' simpexpr
   68         | simpexpr . OR simpexpr
   68         | simpexpr OR simpexpr .
   69         | simpexpr . '*' simpexpr
   70         | simpexpr . '/' simpexpr
   71         | simpexpr . AND simpexpr

    AND  shift, and go to state 31
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 68 (simpexpr)


State 52

   60 expr: simpexpr EQ simpexpr .
   66 simpexpr: simpexpr . '+' simpexpr
   67         | simpexpr . '-' simpexpr
   68         | simpexpr . OR simpexpr
   69         | simpexpr . '*' simpexpr
   70         | simpexpr . '/' simpexpr
   71         | simpexpr . AND simpexpr

    AND  shift, and go to state 31
    OR   shift, and go to state 32
    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 60 (expr)


State 53

   61 expr: simpexpr NEQ simpexpr .
   66 simpexpr: simpexpr . '+' simpexpr
   67         | simpexpr . '-' simpexpr
   68         | simpexpr . OR simpexpr
   69         | simpexpr . '*' simpexpr
   70         | simpexpr . '/' simpexpr
   71         | simpexpr . AND simpexpr

    AND  shift, and go to state 31
    OR   shift, and go to state 32
    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 61 (expr)


State 54

   62 expr: simpexpr LEQ simpexpr .
   66 simpexpr: simpexpr . '+' simpexpr
   67         | simpexpr . '-' simpexpr
   68         | simpexpr . OR simpexpr
   69         | simpexpr . '*' simpexpr
   70         | simpexpr . '/' simpexpr
   71         | simpexpr . AND simpexpr

    AND  shift, and go to state 31
    OR   shift, and go to state 32
    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 62 (expr)


State 55

   63 expr: simpexpr GEQ simpexpr .
   66 simpexpr: simpexpr . '+' simpexpr
   67         | simpexpr . '-' simpexpr
   68         | simpexpr . OR simpexpr
   69         | simpexpr . '*' simpexpr
   70         | simpexpr . '/' simpexpr
   71         | simpexpr . AND simpexpr

    AND  shift, and go to state 31
    OR   shift, and go to state 32
    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 63 (expr)


State 56

   64 expr: simpexpr LSS simpexpr .
   66 simpexpr: simpexpr . '+' simpexpr
   67         | simpexpr . '-' simpexpr
   68         | simpexpr . OR simpexpr
   69         | simpexpr . '*' simpexpr
   70         | simpexpr . '/' simpexpr
   71         | simpexpr . AND simpexpr

    AND  shift, and go to state 31
    OR   shift, and go to state 32
    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 64 (expr)


State 57

   65 expr: simpexpr GRT simpexpr .
   66 simpexpr: simpexpr . '+' simpexpr
   67         | simpexpr . '-' simpexpr
   68         | simpexpr . OR simpexpr
   69         | simpexpr . '*' simpexpr
   70         | simpexpr . '/' simpexpr
   71         | simpexpr . AND simpexpr

    AND  shift, and go to state 31
    OR   shift, and go to state 32
    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 65 (expr)


State 58

   66 simpexpr: simpexpr . '+' simpexpr
   66         | simpexpr '+' simpexpr .
   67         | simpexpr . '-' simpexpr
   68         | simpexpr . OR simpexpr
   69         | simpexpr . '*' simpexpr
   70         | simpexpr . '/' simpexpr
   71         | simpexpr . AND simpexpr

    AND  shift, and go to state 31
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 66 (simpexpr)


State 59

   66 simpexpr: simpexpr . '+' simpexpr
   67         | simpexpr . '-' simpexpr
   67         | simpexpr '-' simpexpr .
   68         | simpexpr . OR simpexpr
   69         | simpexpr . '*' simpexpr
   70         | simpexpr . '/' simpexpr
   71         | simpexpr . AND simpexpr

    AND  shift, and go to state 31
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 67 (simpexpr)


State 60

   66 simpexpr: simpexpr . '+' simpexpr
   67         | simpexpr . '-' simpexpr
   68         | simpexpr . OR simpexpr
   69         | simpexpr . '*' simpexpr
   69         | simpexpr '*' simpexpr .
   70         | simpexpr . '/' simpexpr
   71         | simpexpr . AND simpexpr

    $default  reduce using rule 69 (simpexpr)


State 61

   66 simpexpr: simpexpr . '+' simpexpr
   67         | simpexpr . '-' simpexpr
   68         | simpexpr . OR simpexpr
   69         | simpexpr . '*' simpexpr
   70         | simpexpr . '/' simpexpr
   70         | simpexpr '/' simpexpr .
   71         | simpexpr . AND simpexpr

    $default  reduce using rule 70 (simpexpr)


State 62

    7 functiondefinition: type ID $@1 '(' opt_parameterlist ')' . $@2 '{' statementlist '}'

    $default  reduce using rule 6 ($@2)

    $@2  go to state 68


State 63

   11 parameterlist: parameter ',' . parameterlist

    KW_BOOLEAN  shift, and go to state 4
    KW_FLOAT    shift, and go to state 5
    KW_INT      shift, and go to state 6
    KW_VOID     shift, and go to state 7

    parameterlist  go to state 69
    parameter      go to state 45
    type           go to state 46


State 64

   12 parameter: type ID .

    $default  reduce using rule 12 (parameter)


State 65

   14 functioncall: ID '(' $@3 opt_argumentlist . ')'

    ')'  shift, and go to state 70


State 66

   16 opt_argumentlist: argumentlist .
   18 argumentlist: argumentlist . ',' assignment

    ','  shift, and go to state 71

    $default  reduce using rule 16 (opt_argumentlist)


State 67

   17 argumentlist: assignment .

    $default  reduce using rule 17 (argumentlist)


State 68

    7 functiondefinition: type ID $@1 '(' opt_parameterlist ')' $@2 . '{' statementlist '}'

    '{'  shift, and go to state 72


State 69

   11 parameterlist: parameter ',' parameterlist .

    $default  reduce using rule 11 (parameterlist)


State 70

   14 functioncall: ID '(' $@3 opt_argumentlist ')' .

    $default  reduce using rule 14 (functioncall)


State 71

   18 argumentlist: argumentlist ',' . assignment

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 18
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    assignment    go to state 73
    expr          go to state 23
    simpexpr      go to state 24


State 72

    7 functiondefinition: type ID $@1 '(' opt_parameterlist ')' $@2 '{' . statementlist '}'

    $default  reduce using rule 19 (statementlist)

    statementlist  go to state 74


State 73

   18 argumentlist: argumentlist ',' assignment .

    $default  reduce using rule 18 (argumentlist)


State 74

    7 functiondefinition: type ID $@1 '(' opt_parameterlist ')' $@2 '{' statementlist . '}'
   20 statementlist: statementlist . statement

    KW_BOOLEAN  shift, and go to state 4
    KW_DO       shift, and go to state 75
    KW_FLOAT    shift, and go to state 5
    KW_FOR      shift, and go to state 76
    KW_IF       shift, and go to state 77
    KW_INT      shift, and go to state 6
    KW_PRINTF   shift, and go to state 78
    KW_RETURN   shift, and go to state 79
    KW_VOID     shift, and go to state 7
    KW_WHILE    shift, and go to state 80
    ID          shift, and go to state 81
    '{'         shift, and go to state 82
    '}'         shift, and go to state 83

    functioncall      go to state 84
    block             go to state 85
    statement         go to state 86
    ifstatement       go to state 87
    forstatement      go to state 88
    dowhilestatement  go to state 89
    whilestatement    go to state 90
    returnstatement   go to state 91
    printf            go to state 92
    declassignment    go to state 93
    type              go to state 94
    statassignment    go to state 95


State 75

   43 dowhilestatement: KW_DO . $@9 statement KW_WHILE '(' assignment ')'

    $default  reduce using rule 42 ($@9)

    $@9  go to state 96


State 76

   39 forstatement: KW_FOR . '(' $@7 declassignment ';' expr ';' statassignment ')' statement
   41             | KW_FOR . '(' $@8 statassignment ';' expr ';' statassignment ')' statement

    '('  shift, and go to state 97


State 77

   35 ifstatement: KW_IF . '(' assignment $@6 ')' statement opt_else

    '('  shift, and go to state 98


State 78

   48 printf: KW_PRINTF . '(' assignment ')'
   49       | KW_PRINTF . '(' CONST_STRING ')'

    '('  shift, and go to state 99


State 79

   46 returnstatement: KW_RETURN .
   47                | KW_RETURN . assignment

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 18
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    $default  reduce using rule 46 (returnstatement)

    functioncall  go to state 21
    assignment    go to state 100
    expr          go to state 23
    simpexpr      go to state 24


State 80

   45 whilestatement: KW_WHILE . $@10 '(' assignment ')' statement

    $default  reduce using rule 44 ($@10)

    $@10  go to state 101


State 81

   14 functioncall: ID . '(' $@3 opt_argumentlist ')'
   56 statassignment: ID . '=' assignment

    '('  shift, and go to state 26
    '='  shift, and go to state 102


State 82

   23 block: '{' . $@4 statementlist $@5 '}'

    $default  reduce using rule 21 ($@4)

    $@4  go to state 103


State 83

    7 functiondefinition: type ID $@1 '(' opt_parameterlist ')' $@2 '{' statementlist '}' .

    $default  reduce using rule 7 (functiondefinition)


State 84

   32 statement: functioncall . ';'

    ';'  shift, and go to state 104


State 85

   33 statement: block .

    $default  reduce using rule 33 (statement)


State 86

   20 statementlist: statementlist statement .

    $default  reduce using rule 20 (statementlist)


State 87

   24 statement: ifstatement .

    $default  reduce using rule 24 (statement)


State 88

   25 statement: forstatement .

    $default  reduce using rule 25 (statement)


State 89

   28 statement: dowhilestatement . ';'

    ';'  shift, and go to state 105


State 90

   26 statement: whilestatement .

    $default  reduce using rule 26 (statement)


State 91

   27 statement: returnstatement . ';'

    ';'  shift, and go to state 106


State 92

   29 statement: printf . ';'

    ';'  shift, and go to state 107


State 93

   30 statement: declassignment . ';'

    ';'  shift, and go to state 108


State 94

   50 declassignment: type . ID
   51               | type . ID '=' assignment

    ID  shift, and go to state 109


State 95

   31 statement: statassignment . ';'

    ';'  shift, and go to state 110


State 96

   43 dowhilestatement: KW_DO $@9 . statement KW_WHILE '(' assignment ')'

    KW_BOOLEAN  shift, and go to state 4
    KW_DO       shift, and go to state 75
    KW_FLOAT    shift, and go to state 5
    KW_FOR      shift, and go to state 76
    KW_IF       shift, and go to state 77
    KW_INT      shift, and go to state 6
    KW_PRINTF   shift, and go to state 78
    KW_RETURN   shift, and go to state 79
    KW_VOID     shift, and go to state 7
    KW_WHILE    shift, and go to state 80
    ID          shift, and go to state 81
    '{'         shift, and go to state 82

    functioncall      go to state 84
    block             go to state 85
    statement         go to state 111
    ifstatement       go to state 87
    forstatement      go to state 88
    dowhilestatement  go to state 89
    whilestatement    go to state 90
    returnstatement   go to state 91
    printf            go to state 92
    declassignment    go to state 93
    type              go to state 94
    statassignment    go to state 95


State 97

   39 forstatement: KW_FOR '(' . $@7 declassignment ';' expr ';' statassignment ')' statement
   41             | KW_FOR '(' . $@8 statassignment ';' expr ';' statassignment ')' statement

    ID        reduce using rule 40 ($@8)
    $default  reduce using rule 38 ($@7)

    $@7  go to state 112
    $@8  go to state 113


State 98

   35 ifstatement: KW_IF '(' . assignment $@6 ')' statement opt_else

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 18
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    assignment    go to state 114
    expr          go to state 23
    simpexpr      go to state 24


State 99

   48 printf: KW_PRINTF '(' . assignment ')'
   49       | KW_PRINTF '(' . CONST_STRING ')'

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    CONST_STRING   shift, and go to state 115
    ID             shift, and go to state 18
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    assignment    go to state 116
    expr          go to state 23
    simpexpr      go to state 24


State 100

   47 returnstatement: KW_RETURN assignment .

    $default  reduce using rule 47 (returnstatement)


State 101

   45 whilestatement: KW_WHILE $@10 . '(' assignment ')' statement

    '('  shift, and go to state 117


State 102

   56 statassignment: ID '=' . assignment

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 18
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    assignment    go to state 118
    expr          go to state 23
    simpexpr      go to state 24


State 103

   23 block: '{' $@4 . statementlist $@5 '}'

    $default  reduce using rule 19 (statementlist)

    statementlist  go to state 119


State 104

   32 statement: functioncall ';' .

    $default  reduce using rule 32 (statement)


State 105

   28 statement: dowhilestatement ';' .

    $default  reduce using rule 28 (statement)


State 106

   27 statement: returnstatement ';' .

    $default  reduce using rule 27 (statement)


State 107

   29 statement: printf ';' .

    $default  reduce using rule 29 (statement)


State 108

   30 statement: declassignment ';' .

    $default  reduce using rule 30 (statement)


State 109

   50 declassignment: type ID .
   51               | type ID . '=' assignment

    '='  shift, and go to state 13

    $default  reduce using rule 50 (declassignment)


State 110

   31 statement: statassignment ';' .

    $default  reduce using rule 31 (statement)


State 111

   43 dowhilestatement: KW_DO $@9 statement . KW_WHILE '(' assignment ')'

    KW_WHILE  shift, and go to state 120


State 112

   39 forstatement: KW_FOR '(' $@7 . declassignment ';' expr ';' statassignment ')' statement

    KW_BOOLEAN  shift, and go to state 4
    KW_FLOAT    shift, and go to state 5
    KW_INT      shift, and go to state 6
    KW_VOID     shift, and go to state 7

    declassignment  go to state 121
    type            go to state 94


State 113

   41 forstatement: KW_FOR '(' $@8 . statassignment ';' expr ';' statassignment ')' statement

    ID  shift, and go to state 122

    statassignment  go to state 123


State 114

   35 ifstatement: KW_IF '(' assignment . $@6 ')' statement opt_else

    $default  reduce using rule 34 ($@6)

    $@6  go to state 124


State 115

   49 printf: KW_PRINTF '(' CONST_STRING . ')'

    ')'  shift, and go to state 125


State 116

   48 printf: KW_PRINTF '(' assignment . ')'

    ')'  shift, and go to state 126


State 117

   45 whilestatement: KW_WHILE $@10 '(' . assignment ')' statement

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 18
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    assignment    go to state 127
    expr          go to state 23
    simpexpr      go to state 24


State 118

   56 statassignment: ID '=' assignment .

    $default  reduce using rule 56 (statassignment)


State 119

   20 statementlist: statementlist . statement
   23 block: '{' $@4 statementlist . $@5 '}'

    KW_BOOLEAN  shift, and go to state 4
    KW_DO       shift, and go to state 75
    KW_FLOAT    shift, and go to state 5
    KW_FOR      shift, and go to state 76
    KW_IF       shift, and go to state 77
    KW_INT      shift, and go to state 6
    KW_PRINTF   shift, and go to state 78
    KW_RETURN   shift, and go to state 79
    KW_VOID     shift, and go to state 7
    KW_WHILE    shift, and go to state 80
    ID          shift, and go to state 81
    '{'         shift, and go to state 82

    $default  reduce using rule 22 ($@5)

    functioncall      go to state 84
    block             go to state 85
    $@5               go to state 128
    statement         go to state 86
    ifstatement       go to state 87
    forstatement      go to state 88
    dowhilestatement  go to state 89
    whilestatement    go to state 90
    returnstatement   go to state 91
    printf            go to state 92
    declassignment    go to state 93
    type              go to state 94
    statassignment    go to state 95


State 120

   43 dowhilestatement: KW_DO $@9 statement KW_WHILE . '(' assignment ')'

    '('  shift, and go to state 129


State 121

   39 forstatement: KW_FOR '(' $@7 declassignment . ';' expr ';' statassignment ')' statement

    ';'  shift, and go to state 130


State 122

   56 statassignment: ID . '=' assignment

    '='  shift, and go to state 102


State 123

   41 forstatement: KW_FOR '(' $@8 statassignment . ';' expr ';' statassignment ')' statement

    ';'  shift, and go to state 131


State 124

   35 ifstatement: KW_IF '(' assignment $@6 . ')' statement opt_else

    ')'  shift, and go to state 132


State 125

   49 printf: KW_PRINTF '(' CONST_STRING ')' .

    $default  reduce using rule 49 (printf)


State 126

   48 printf: KW_PRINTF '(' assignment ')' .

    $default  reduce using rule 48 (printf)


State 127

   45 whilestatement: KW_WHILE $@10 '(' assignment . ')' statement

    ')'  shift, and go to state 133


State 128

   23 block: '{' $@4 statementlist $@5 . '}'

    '}'  shift, and go to state 134


State 129

   43 dowhilestatement: KW_DO $@9 statement KW_WHILE '(' . assignment ')'

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 18
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    assignment    go to state 135
    expr          go to state 23
    simpexpr      go to state 24


State 130

   39 forstatement: KW_FOR '(' $@7 declassignment ';' . expr ';' statassignment ')' statement

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 28
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    expr          go to state 136
    simpexpr      go to state 24


State 131

   41 forstatement: KW_FOR '(' $@8 statassignment ';' . expr ';' statassignment ')' statement

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 28
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    expr          go to state 137
    simpexpr      go to state 24


State 132

   35 ifstatement: KW_IF '(' assignment $@6 ')' . statement opt_else

    KW_BOOLEAN  shift, and go to state 4
    KW_DO       shift, and go to state 75
    KW_FLOAT    shift, and go to state 5
    KW_FOR      shift, and go to state 76
    KW_IF       shift, and go to state 77
    KW_INT      shift, and go to state 6
    KW_PRINTF   shift, and go to state 78
    KW_RETURN   shift, and go to state 79
    KW_VOID     shift, and go to state 7
    KW_WHILE    shift, and go to state 80
    ID          shift, and go to state 81
    '{'         shift, and go to state 82

    functioncall      go to state 84
    block             go to state 85
    statement         go to state 138
    ifstatement       go to state 87
    forstatement      go to state 88
    dowhilestatement  go to state 89
    whilestatement    go to state 90
    returnstatement   go to state 91
    printf            go to state 92
    declassignment    go to state 93
    type              go to state 94
    statassignment    go to state 95


State 133

   45 whilestatement: KW_WHILE $@10 '(' assignment ')' . statement

    KW_BOOLEAN  shift, and go to state 4
    KW_DO       shift, and go to state 75
    KW_FLOAT    shift, and go to state 5
    KW_FOR      shift, and go to state 76
    KW_IF       shift, and go to state 77
    KW_INT      shift, and go to state 6
    KW_PRINTF   shift, and go to state 78
    KW_RETURN   shift, and go to state 79
    KW_VOID     shift, and go to state 7
    KW_WHILE    shift, and go to state 80
    ID          shift, and go to state 81
    '{'         shift, and go to state 82

    functioncall      go to state 84
    block             go to state 85
    statement         go to state 139
    ifstatement       go to state 87
    forstatement      go to state 88
    dowhilestatement  go to state 89
    whilestatement    go to state 90
    returnstatement   go to state 91
    printf            go to state 92
    declassignment    go to state 93
    type              go to state 94
    statassignment    go to state 95


State 134

   23 block: '{' $@4 statementlist $@5 '}' .

    $default  reduce using rule 23 (block)


State 135

   43 dowhilestatement: KW_DO $@9 statement KW_WHILE '(' assignment . ')'

    ')'  shift, and go to state 140


State 136

   39 forstatement: KW_FOR '(' $@7 declassignment ';' expr . ';' statassignment ')' statement

    ';'  shift, and go to state 141


State 137

   41 forstatement: KW_FOR '(' $@8 statassignment ';' expr . ';' statassignment ')' statement

    ';'  shift, and go to state 142


State 138

   35 ifstatement: KW_IF '(' assignment $@6 ')' statement . opt_else

    KW_ELSE  shift, and go to state 143

    $default  reduce using rule 36 (opt_else)

    opt_else  go to state 144


State 139

   45 whilestatement: KW_WHILE $@10 '(' assignment ')' statement .

    $default  reduce using rule 45 (whilestatement)


State 140

   43 dowhilestatement: KW_DO $@9 statement KW_WHILE '(' assignment ')' .

    $default  reduce using rule 43 (dowhilestatement)


State 141

   39 forstatement: KW_FOR '(' $@7 declassignment ';' expr ';' . statassignment ')' statement

    ID  shift, and go to state 122

    statassignment  go to state 145


State 142

   41 forstatement: KW_FOR '(' $@8 statassignment ';' expr ';' . statassignment ')' statement

    ID  shift, and go to state 122

    statassignment  go to state 146


State 143

   37 opt_else: KW_ELSE . statement

    KW_BOOLEAN  shift, and go to state 4
    KW_DO       shift, and go to state 75
    KW_FLOAT    shift, and go to state 5
    KW_FOR      shift, and go to state 76
    KW_IF       shift, and go to state 77
    KW_INT      shift, and go to state 6
    KW_PRINTF   shift, and go to state 78
    KW_RETURN   shift, and go to state 79
    KW_VOID     shift, and go to state 7
    KW_WHILE    shift, and go to state 80
    ID          shift, and go to state 81
    '{'         shift, and go to state 82

    functioncall      go to state 84
    block             go to state 85
    statement         go to state 147
    ifstatement       go to state 87
    forstatement      go to state 88
    dowhilestatement  go to state 89
    whilestatement    go to state 90
    returnstatement   go to state 91
    printf            go to state 92
    declassignment    go to state 93
    type              go to state 94
    statassignment    go to state 95


State 144

   35 ifstatement: KW_IF '(' assignment $@6 ')' statement opt_else .

    $default  reduce using rule 35 (ifstatement)


State 145

   39 forstatement: KW_FOR '(' $@7 declassignment ';' expr ';' statassignment . ')' statement

    ')'  shift, and go to state 148


State 146

   41 forstatement: KW_FOR '(' $@8 statassignment ';' expr ';' statassignment . ')' statement

    ')'  shift, and go to state 149


State 147

   37 opt_else: KW_ELSE statement .

    $default  reduce using rule 37 (opt_else)


State 148

   39 forstatement: KW_FOR '(' $@7 declassignment ';' expr ';' statassignment ')' . statement

    KW_BOOLEAN  shift, and go to state 4
    KW_DO       shift, and go to state 75
    KW_FLOAT    shift, and go to state 5
    KW_FOR      shift, and go to state 76
    KW_IF       shift, and go to state 77
    KW_INT      shift, and go to state 6
    KW_PRINTF   shift, and go to state 78
    KW_RETURN   shift, and go to state 79
    KW_VOID     shift, and go to state 7
    KW_WHILE    shift, and go to state 80
    ID          shift, and go to state 81
    '{'         shift, and go to state 82

    functioncall      go to state 84
    block             go to state 85
    statement         go to state 150
    ifstatement       go to state 87
    forstatement      go to state 88
    dowhilestatement  go to state 89
    whilestatement    go to state 90
    returnstatement   go to state 91
    printf            go to state 92
    declassignment    go to state 93
    type              go to state 94
    statassignment    go to state 95


State 149

   41 forstatement: KW_FOR '(' $@8 statassignment ';' expr ';' statassignment ')' . statement

    KW_BOOLEAN  shift, and go to state 4
    KW_DO       shift, and go to state 75
    KW_FLOAT    shift, and go to state 5
    KW_FOR      shift, and go to state 76
    KW_IF       shift, and go to state 77
    KW_INT      shift, and go to state 6
    KW_PRINTF   shift, and go to state 78
    KW_RETURN   shift, and go to state 79
    KW_VOID     shift, and go to state 7
    KW_WHILE    shift, and go to state 80
    ID          shift, and go to state 81
    '{'         shift, and go to state 82

    functioncall      go to state 84
    block             go to state 85
    statement         go to state 151
    ifstatement       go to state 87
    forstatement      go to state 88
    dowhilestatement  go to state 89
    whilestatement    go to state 90
    returnstatement   go to state 91
    printf            go to state 92
    declassignment    go to state 93
    type              go to state 94
    statassignment    go to state 95


State 150

   39 forstatement: KW_FOR '(' $@7 declassignment ';' expr ';' statassignment ')' statement .

    $default  reduce using rule 39 (forstatement)


State 151

   41 forstatement: KW_FOR '(' $@8 statassignment ';' expr ';' statassignment ')' statement .

    $default  reduce using rule 41 (forstatement)
